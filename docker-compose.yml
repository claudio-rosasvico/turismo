services:
  # Servicio de la aplicación Laravel (PHP-FPM)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_app
    working_dir: /var/www
    restart: unless-stopped
    volumes:
      - .:/var/www
    ports:
      - "9000"
    environment:
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE:-turismo} # Asegúrate que este sea 'turismo' si así lo configuraste
      DB_USERNAME: ${DB_USERNAME:-sail} # Esto tomará 'root' de tu .env
      DB_PASSWORD: ${DB_PASSWORD:-password} # Esto tomará 'password' de tu .env
      APP_ENV: local
      APP_DEBUG: "true"
      APP_KEY: ${APP_KEY}
    depends_on:
      db:
        condition: service_healthy # ¡Añade esto!

  # Servicio del servidor web (Nginx)
  nginx:
    image: nginx:stable-alpine
    container_name: laravel_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app

  # Servicio de la base de datos (MySQL)
  db:
    image: mysql:8.0
    container_name: laravel_db
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-turismo} # Asegúrate que este sea 'turismo'
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-password}
      # MYSQL_USER: ${DB_USERNAME:-sail} # Esto tomará 'root' de tu .env
      # MYSQL_PASSWORD: ${DB_PASSWORD:-password} # ¡Asegúrate de tener esta línea también!
    healthcheck: # ¡Añade esto!
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${DB_USERNAME:-sail}", "-p${DB_PASSWORD:-password}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s